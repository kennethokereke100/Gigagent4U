rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Posts collection - allow authenticated users to read all posts, create/update/delete their own
    match /posts/{postId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null && request.auth.uid == request.resource.data.userId;
      allow update, delete: if request.auth != null && request.auth.uid == resource.data.userId;
    }
    
    // Users collection - allow authenticated users to read all users, create/update/delete their own
    match /users/{userId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null && request.auth.uid == userId;
      allow update, delete: if request.auth != null && request.auth.uid == userId;
    }
    
    // Profiles collection - allow authenticated users to read all profiles, create/update/delete their own
    match /profiles/{profileId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null && request.auth.uid == request.resource.data.userId;
      allow update, delete: if request.auth != null && request.auth.uid == resource.data.userId;
    }
    
    // Google Events collection - allow authenticated users to read all events, create/update/delete their own
    match /googleevents/{eventId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null && request.auth.uid == request.resource.data.createdBy;
      allow update, delete: if request.auth != null && request.auth.uid == resource.data.createdBy;
    }
    
    // Notifications collection - secure notifications to the right user
    match /notifications/{notificationId} {
      // Only authenticated users can create a notification where they are the owner
      allow create: if request.auth != null && request.auth.uid == request.resource.data.userId;
      // Only the owner can read, update, or delete their notifications
      allow read, update, delete: if request.auth != null && request.auth.uid == resource.data.userId;
    }
    
    // Conversations collection - secure conversations between members
    match /conversations/{conversationId} {
      // Allow read/update if user is a member of existing conversation
      allow read, update: if request.auth != null && 
        request.auth.uid in resource.data.members;
      // Allow create if user is a member of the new conversation
      allow create: if request.auth != null && 
        request.auth.uid in request.resource.data.members;
      
      // Messages subcollection - only members can read/write messages
      match /messages/{messageId} {
        // Only members of the parent conversation can read messages
        allow read: if request.auth != null && 
          request.auth.uid in get(/databases/$(database)/documents/conversations/$(conversationId)).data.members;
        // Only authenticated users can create messages in conversations they are members of
        allow create: if request.auth != null && 
          request.auth.uid == request.resource.data.senderId &&
          request.auth.uid in get(/databases/$(database)/documents/conversations/$(conversationId)).data.members;
      }
    }
  }
}
